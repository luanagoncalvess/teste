import { Injectable } from '@angular/core';
import { MatSnackBar } from '@angular/material/snack-bar';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { map, Observable } from 'rxjs';
import { FinancialAsset } from './financial-asset/financial-asset.model';

@Injectable({
  providedIn: 'root'
})
export class FinancialAssetService {

  baseUrl = "https://query2.finance.yahoo.com/v8/finance/chart/PETR4.SA";

  constructor(private snackBar:MatSnackBar, private http: HttpClient) { }

  showOnMessage(msg: string): void{
    this.snackBar.open(msg, '', {
      duration: 3000,
      horizontalPosition: "right",
      verticalPosition: "top"
    })
  }

  // read(): Array<any>{
    // read(): Observable<FinancialAsset>{
    //   return this.http.get<FinancialAsset>(this.baseUrl).pipe(
    //     map((obj) => obj),

    //   )
      // console.log("luana")
  //   const headerDict = {
  //     'Access-Control-Allow-Origin': '*',
  //     'Access-Control-Allow-Credentials': 'true',
  //     'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',
  //     'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE',
  //     'Content-Type': 'application/json',
  // }
    
  // const requestOptions = {                                                                                                                                                                                 
  //     headers: new HttpHeaders(headerDict), 
  // };
    // this.http.get<any>(this.baseUrl);


  // }
  // const obj={"chart":{"result":[{"meta":{"currency":"BRL","symbol":"PETR4.SA","exchangeName":"SAO","instrumentType":"EQUITY","firstTradeDate":946900800,"regularMarketTime":1679342865,"gmtoffset":-10800,"timezone":"BRT","exchangeTimezoneName":"America/Sao_Paulo","regularMarketPrice":22.93,"chartPreviousClose":24.52,"priceHint":2,"currentTradingPeriod":{"pre":{"timezone":"BRT","start":1679402700,"end":1679403600,"gmtoffset":-10800},"regular":{"timezone":"BRT","start":1679403600,"end":1679428800,"gmtoffset":-10800},"post":{"timezone":"BRT","start":1679428800,"end":1679432400,"gmtoffset":-10800}},"dataGranularity":"1d","range":"30d","validRanges":["1d","5d","1mo","3mo","6mo","1y","2y","5y","10y","ytd","max"]},"timestamp":[1675425600,1675684800,1675771200,1675857600,1675944000,1676030400,1676289600,1676376000,1676462400,1676548800,1676635200,1677078000,1677153600,1677240000,1677502800,1677589200,1677675600,1677762000,1677848400,1678107600,1678194000,1678280400,1678366800,1678453200,1678712400,1678798800,1678885200,1678971600,1679058000,1679342865],"indicators":{"quote":[{"low":[24.420000076293945,24.75,25.459999084472656,25.559999465942383,25.790000915527344,25.93000030517578,26.3700008392334,26.600000381469727,26.299999237060547,26.489999771118164,26.3700008392334,25.690000534057617,25.770000457763672,25.8700008392334,25.809999465942383,25.239999771118164,24.190000534057617,24.3700008392334,24.450000762939453,25.3700008392334,24.93000030517578,25.1299991607666,25.280000686645508,24.940000534057617,24.100000381469727,23.600000381469727,22.799999237060547,22.969999313354492,22.860000610351562,0.0],"open":[24.540000915527344,24.8700008392334,25.90999984741211,25.799999237060547,26.049999237060547,25.979999542236328,26.690000534057617,26.850000381469727,26.579999923706055,26.600000381469727,26.670000076293945,26.0,25.770000457763672,26.670000076293945,25.84000015258789,26.209999084472656,25.309999465942383,25.420000076293945,24.829999923706055,25.700000762939453,25.719999313354492,25.149999618530273,25.350000381469727,25.15999984741211,24.549999237060547,24.280000686645508,23.329999923706055,23.399999618530273,23.100000381469727,0.0],"volume":[71170700,82794500,55311800,48713100,38198300,54683100,36726900,35839000,72554100,44115700,61085700,38608500,73913400,64409100,76250600,130248100,109257700,124516200,87591800,50227400,59052500,66220400,68042300,48118600,58605500,58916700,93708800,66821000,93502700,0],"high":[25.3799991607666,25.8700008392334,26.139999389648438,26.149999618530273,26.31999969482422,26.790000915527344,26.889999389648438,27.059999465942383,26.799999237060547,26.950000762939453,26.670000076293945,26.110000610351562,26.790000915527344,26.700000762939453,26.739999771118164,26.920000076293945,25.43000030517578,25.670000076293945,25.739999771118164,26.1200008392334,25.780000686645508,25.920000076293945,26.229999542236328,25.579999923706055,24.860000610351562,24.729999542236328,23.479999542236328,23.520000457763672,23.510000228881836,0.0],"close":[24.790000915527344,25.780000686645508,25.6200008392334,26.049999237060547,25.93000030517578,26.719999313354492,26.799999237060547,26.700000762939453,26.739999771118164,26.850000381469727,26.440000534057617,25.760000228881836,26.549999237060547,25.899999618530273,26.149999618530273,25.239999771118164,25.299999237060547,24.639999389648438,25.700000762939453,25.959999084472656,25.100000381469727,25.420000076293945,25.309999465942383,24.979999542236328,24.190000534057617,23.760000228881836,23.34000015258789,23.260000228881836,23.510000228881836,22.93000030517578]}],"adjclose":[{"adjclose":[24.790000915527344,25.780000686645508,25.6200008392334,26.049999237060547,25.93000030517578,26.719999313354492,26.799999237060547,26.700000762939453,26.739999771118164,26.850000381469727,26.440000534057617,25.760000228881836,26.549999237060547,25.899999618530273,26.149999618530273,25.239999771118164,25.299999237060547,24.639999389648438,25.700000762939453,25.959999084472656,25.100000381469727,25.420000076293945,25.309999465942383,24.979999542236328,24.190000534057617,23.760000228881836,23.34000015258789,23.260000228881836,23.510000228881836,22.93000030517578]}]}}],"error":null}};
  // return obj.chart.result[0].indicators.quote[0].open;
  // return obj.chart.result;
// }

read(): Observable<any> {
  const headerDict = {
      'Access-Control-Allow-Origin': '*',
'Access-Control-Allow-Methods': 'POST,GET,PUT,DELETE',
      'Access-Control-Allow-Headers': 'Authorization, Lang',
      'Content-Type': 'application/json',
      'Accept': 'application/json',
  }
    
  const requestOptions = {                                                                                                                                                                                 
      headers: new HttpHeaders(headerDict), 
  };

  // const headers = new HttpHeaders()
  //   .set('content-type','application/json')
  //   .set('Accept', 'application/json')
  //   .set('Access-Control-Allow-Origin', '*'); 


  let filters = "?metrics=open&interval=1d&range=30d"
  return this.http.get("/api/v8/finance/chart/PETR4.SA",requestOptions);}
}